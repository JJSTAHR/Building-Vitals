name: Historical Data Backfill

on:
  # Daily automatic backfill at 2 AM UTC
  schedule:
    - cron: '0 2 * * *'

  # Manual trigger with custom parameters
  workflow_dispatch:
    inputs:
      site:
        description: 'Site name to backfill (leave empty for all sites)'
        required: false
        type: string
        default: ''

      start_date:
        description: 'Start date (YYYY-MM-DDTHH:MM:SSZ, leave empty for yesterday)'
        required: false
        type: string
        default: ''

      end_date:
        description: 'End date (YYYY-MM-DDTHH:MM:SSZ, leave empty for yesterday)'
        required: false
        type: string
        default: ''

      chunk_minutes:
        description: 'Chunk size in minutes'
        required: false
        type: number
        default: 10

jobs:
  backfill:
    name: Daily Data Backfill
    runs-on: ubuntu-latest
    timeout-minutes: 360  # 6 hours max

    strategy:
      matrix:
        site: [ses_falls_city]  # Add more sites here as needed
      fail-fast: false  # Continue with other sites if one fails

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Calculate date range
        id: dates
        run: |
          # Use manual inputs if provided, otherwise default to yesterday
          if [ -n "${{ inputs.start_date }}" ]; then
            START="${{ inputs.start_date }}"
            END="${{ inputs.end_date }}"
            SITE="${{ inputs.site }}"
          else
            # Scheduled run - backfill previous day
            YESTERDAY=$(date -u -d "yesterday" +%Y-%m-%d)
            START="${YESTERDAY}T00:00:00Z"
            END="${YESTERDAY}T23:59:59Z"
            SITE="${{ matrix.site }}"
          fi

          echo "site=${SITE}" >> $GITHUB_OUTPUT
          echo "start=${START}" >> $GITHUB_OUTPUT
          echo "end=${END}" >> $GITHUB_OUTPUT

          echo "ðŸš€ Starting Historical Backfill"
          echo "================================"
          echo "Site: ${SITE}"
          echo "Start: ${START}"
          echo "End: ${END}"
          echo "Chunk size: ${{ inputs.chunk_minutes || 10 }} minutes"
          echo "Trigger: ${{ github.event_name }}"
          echo "================================"

      - name: Run backfill script
        env:
          SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
          SUPABASE_SERVICE_ROLE_KEY: ${{ secrets.SUPABASE_SERVICE_ROLE_KEY }}
          ACE_API_KEY: ${{ secrets.ACE_API_KEY }}
          ACE_API_BASE: ${{ secrets.ACE_API_BASE }}
        run: |
          node scripts/github-actions-backfill.cjs \
            --site "${{ steps.dates.outputs.site }}" \
            --start "${{ steps.dates.outputs.start }}" \
            --end "${{ steps.dates.outputs.end }}" \
            --chunk-minutes ${{ inputs.chunk_minutes || 10 }}

      - name: Upload backfill logs
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: backfill-logs-${{ steps.dates.outputs.site }}-${{ github.run_number }}
          path: |
            *.log
          retention-days: 30
