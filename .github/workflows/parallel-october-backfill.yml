name: Parallel October Backfill (Matrix Strategy)

on:
  workflow_dispatch:
    inputs:
      chunk_minutes:
        description: "Chunk size in minutes"
        required: true
        default: "30"
      page_size:
        description: "ACE API page size (max: 500000)"
        required: true
        default: "50000"

concurrency:
  group: parallel-october-backfill-${{ github.run_id }}
  cancel-in-progress: false

permissions:
  contents: read

jobs:
  parallel-backfill:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      max-parallel: 4  # Run all 4 in parallel
      matrix:
        date_range:
          - { name: "Week 1", start: "2025-10-01T00:00:00Z", end: "2025-10-07T23:59:59Z" }
          - { name: "Week 2", start: "2025-10-08T00:00:00Z", end: "2025-10-14T23:59:59Z" }
          - { name: "Week 3", start: "2025-10-15T00:00:00Z", end: "2025-10-21T23:59:59Z" }
          - { name: "Week 4", start: "2025-10-22T00:00:00Z", end: "2025-10-29T23:59:59Z" }

    timeout-minutes: 180  # 3 hours max per runner

    env:
      SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
      SUPABASE_SERVICE_ROLE_KEY: ${{ secrets.SUPABASE_SERVICE_ROLE_KEY }}
      ACE_API_KEY: ${{ secrets.ACE_API_KEY }}
      ACE_API_BASE: https://flightdeck.aceiot.cloud/api

    name: Backfill ${{ matrix.date_range.name }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: 'pip'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r scripts/python/requirements.txt

      - name: Connectivity check
        run: |
          set -euo pipefail
          # Check Supabase connectivity
          base="${SUPABASE_URL%/}"
          code=$(curl -s -o /dev/null -w "%{http_code}" \
            "${base}/rest/v1/points?select=name&limit=1" \
            -H "apikey: ${SUPABASE_SERVICE_ROLE_KEY}")
          if [ "$code" != "200" ]; then
            echo "Supabase connectivity check failed: HTTP $code" >&2
            exit 1
          fi
          echo "âœ… Supabase connectivity OK"

          # Check ACE API connectivity
          ace_code=$(curl -s -o /dev/null -w "%{http_code}" \
            "${ACE_API_BASE}/sites/ses_falls_city/configured_points?page=1&per_page=10" \
            -H "authorization: Bearer ${ACE_API_KEY}")
          if [ "$ace_code" != "200" ]; then
            echo "ACE API connectivity check failed: HTTP $ace_code" >&2
            exit 1
          fi
          echo "âœ… ACE API connectivity OK"

      - name: Run backfill for ${{ matrix.date_range.name }}
        run: |
          echo "================================================"
          echo "Processing: ${{ matrix.date_range.name }}"
          echo "Date Range: ${{ matrix.date_range.start }} â†’ ${{ matrix.date_range.end }}"
          echo "Chunk Size: ${{ github.event.inputs.chunk_minutes || '30' }} minutes"
          echo "Page Size: ${{ github.event.inputs.page_size || '50000' }} records"
          echo "================================================"

          python scripts/python/backfill_paginated_raw.py \
            --site ses_falls_city \
            --start "${{ matrix.date_range.start }}" \
            --end "${{ matrix.date_range.end }}" \
            --chunk-minutes "${{ github.event.inputs.chunk_minutes || '30' }}" \
            --page-size "${{ github.event.inputs.page_size || '50000' }}" \
            --max-chunks 9999 \
            2>&1 | tee backfill-${{ matrix.date_range.name }}.log

      - name: Upload logs
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: backfill-logs-${{ matrix.date_range.name }}
          path: backfill-*.log
          retention-days: 7

      - name: Summary
        if: always()
        run: |
          echo "## Backfill Summary: ${{ matrix.date_range.name }}" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "- **Date Range**: ${{ matrix.date_range.start }} â†’ ${{ matrix.date_range.end }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Status**: ${{ job.status }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Chunk Size**: ${{ github.event.inputs.chunk_minutes || '30' }} minutes" >> $GITHUB_STEP_SUMMARY
          echo "- **Page Size**: ${{ github.event.inputs.page_size || '50000' }} records" >> $GITHUB_STEP_SUMMARY

          # Extract final stats from log
          if [ -f "backfill-${{ matrix.date_range.name }}.log" ]; then
            tail -20 "backfill-${{ matrix.date_range.name }}.log" | grep -E "(processed_chunks|rows_inserted)" || true
          fi

  completion-report:
    runs-on: ubuntu-latest
    needs: parallel-backfill
    if: always()
    steps:
      - name: Download all logs
        uses: actions/download-artifact@v4
        with:
          path: all-logs

      - name: Generate completion report
        run: |
          echo "# ðŸŽ‰ October 2025 Parallel Backfill Complete" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "## Results by Week" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY

          # List all downloaded logs
          for dir in all-logs/backfill-logs-*; do
            if [ -d "$dir" ]; then
              week=$(basename "$dir" | sed 's/backfill-logs-//')
              echo "### $week" >> $GITHUB_STEP_SUMMARY

              # Try to extract stats from log
              log_file=$(find "$dir" -name "*.log" | head -1)
              if [ -f "$log_file" ]; then
                tail -50 "$log_file" | grep -E "(processed_chunks|rows_inserted|Done)" || echo "Stats not found" >> $GITHUB_STEP_SUMMARY
              fi
              echo "" >> $GITHUB_STEP_SUMMARY
            fi
          done

          echo "## Next Steps" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "- âœ… October 2025 backfill complete" >> $GITHUB_STEP_SUMMARY
          echo "- ðŸ“Š Daily sync now maintains data freshness" >> $GITHUB_STEP_SUMMARY
          echo "- ðŸ”„ Daily workflow runs at 2 AM UTC" >> $GITHUB_STEP_SUMMARY
