name: Guaranteed October 15-31 Backfill (ALL 7,327 Points)

on:
  workflow_dispatch:
    inputs:
      batch_size:
        description: 'Points per batch (default: 100)'
        required: false
        default: '100'
      dry_run:
        description: 'Dry run (no database writes)'
        required: false
        default: 'false'

permissions:
  contents: read

jobs:
  guaranteed-backfill:
    runs-on: ubuntu-latest
    timeout-minutes: 120  # 2 hours for ~7,300 points
    env:
      SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
      SUPABASE_SERVICE_ROLE_KEY: ${{ secrets.SUPABASE_SERVICE_ROLE_KEY }}
      ACE_API_KEY: ${{ secrets.ACE_API_KEY }}
      ACE_API_BASE: https://flightdeck.aceiot.cloud/api

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r scripts/python/requirements.txt

      - name: Run guaranteed October 15-31 backfill
        run: |
          echo "========================================"
          echo "GUARANTEED OCTOBER 15-31 BACKFILL"
          echo "========================================"
          echo ""
          echo "Target: ALL 7,327 configured points"
          echo "Period: Oct 15 - Oct 31, 2025"
          echo "Method: POST /points/get_timeseries"
          echo "Batch size: ${{ github.event.inputs.batch_size || '100' }}"
          echo ""

          python scripts/python/guaranteed_october_backfill.py \
            --site ses_falls_city \
            --start 2025-10-15T00:00:00Z \
            --end 2025-11-01T00:00:00Z \
            --batch-size ${{ github.event.inputs.batch_size || '100' }} \
            2>&1 | tee guaranteed-october-backfill.log

      - name: Upload backfill log
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: guaranteed-october-backfill-log
          path: guaranteed-october-backfill.log
          retention-days: 30

      - name: Verify final coverage
        run: |
          echo ""
          echo "========================================"
          echo "VERIFYING FINAL OCTOBER COVERAGE"
          echo "========================================"
          echo ""

          # Query unique points with October data
          RESPONSE=$(curl -sS "$SUPABASE_URL/rest/v1/timeseries?select=point_id&ts=gte.2025-10-15T00:00:00Z&ts=lt.2025-11-01T00:00:00Z&limit=50000" \
            -H "apikey: $SUPABASE_SERVICE_ROLE_KEY" \
            -H "Authorization: Bearer $SUPABASE_SERVICE_ROLE_KEY")

          UNIQUE_POINTS=$(echo "$RESPONSE" | jq '[.[].point_id] | unique | length')
          COVERAGE_PCT=$(echo "scale=1; $UNIQUE_POINTS * 100 / 7327" | bc)

          echo "Unique points with Oct 15-31 data: $UNIQUE_POINTS / 7,327"
          echo "Coverage: ${COVERAGE_PCT}%"
          echo ""

          if [ "$UNIQUE_POINTS" -lt 6500 ]; then
            echo "❌ CRITICAL: Coverage is ${COVERAGE_PCT}% (expected >90%)"
            echo "This indicates ACE API doesn't have data for most points, not a system issue"
            exit 1
          elif [ "$UNIQUE_POINTS" -lt 7000 ]; then
            echo "⚠️  WARNING: Coverage is ${COVERAGE_PCT}% (target: >95%)"
          else
            echo "✅ EXCELLENT: Coverage is ${COVERAGE_PCT}%"
          fi

      - name: Summary
        if: always()
        run: |
          echo "## Guaranteed October Backfill Results" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "This workflow explicitly requested data for ALL 7,327 configured points" >> $GITHUB_STEP_SUMMARY
          echo "using POST /points/get_timeseries endpoint." >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          tail -50 guaranteed-october-backfill.log >> $GITHUB_STEP_SUMMARY
